{"version":3,"sources":["Navbar.js","Sidebar.js","MainPanel.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","id","type","accept","onChange","this","props","handleOnFileChange","currentFilename","Component","Sidebar","name","checked","showAll","onChangeShowAll","displayedKeys","MainPanel","onClick","handlePreviousClick","handleNextClick","value","inputIndex","handleTextInputChange","onKeyPress","handleOnSubmit","currentIndex","dataLength","keyValuePairs","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","filename","target","files","setState","reader","FileReader","onload","data","csvParse","result","keys","map","k","fieldname","display","readAsText","event","state","onChangeShowField","key","forEach","detail","length","index","Number","isInteger","alert","_this2","row","Fragment","filter","obj","Navbar_Navbar","Sidebar_Sidebar","MainPanel_MainPanel","App","Dashboard_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc875e05.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nimport \"./Navbar.css\";\n\nexport default class Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <a className=\"navbar-brand\" href=\"#\">Your Advertisement Here!</a>\n                    </div>\n                    <div id=\"navbar\">\n                        <div className=\"navbar-form navbar-right\">\n                            {/*<input type=\"text\" className=\"form-control\" placeholder=\"Search...\"/>*/}\n                            <label className=\"btn btn-default btn-file\">\n                                Browse <input id=\"navbar-input-file\" type=\"file\" accept=\".csv\" onChange={this.props.handleOnFileChange}/>\n                            </label>\n                        </div>\n                        <p className=\"navbar-text navbar-right\">{this.props.currentFilename}</p>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class Sidebar extends Component {\n\n    render() {\n        return (\n            <div className=\"col-sm-3 col-md-2 sidebar\">\n                <div className=\"page-header\">\n                    <div className=\"checkbox\">\n                        <label>\n                            <input name=\"showAll\" type=\"checkbox\" checked={this.props.showAll} onChange={this.props.onChangeShowAll}/>\n                            Show All\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"page-body\">\n                    <ul className=\"nav nav-sidebar\">\n                        {this.props.displayedKeys}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class MainPanel extends Component {\n\n    render() {\n        return (\n            <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                <div className=\"page-header scroll-buttons text-center\">\n\n                    <div className=\"form-inline\">\n                        <button className=\"btn btn-default\" onClick={this.props.handlePreviousClick}>Previous</button>\n                        <button className=\"btn btn-default\" onClick={this.props.handleNextClick}>Next</button>\n                        <input className=\"form-control text-center\" type=\"text\" value={this.props.inputIndex} onChange={this.props.handleTextInputChange} onKeyPress={this.props.handleOnSubmit}/>\n                        <button className=\"btn btn-default\"> {this.props.currentIndex} out of {this.props.dataLength}</button>\n                    </div>\n\n                </div>\n\n                <div className=\"dl-horizontal\">\n                    {this.props.keyValuePairs}\n                </div>\n\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nimport {csv} from \"d3-fetch\";\nimport {csvParse} from \"d3-dsv\";\n\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\nimport MainPanel from \"./MainPanel\";\n\nexport default class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentFilename: \"Selected File\",\n            currentIndex: -1,\n            inputIndex: 0,\n            showAll: false,\n            keys: [],\n            data: []\n        }\n    }\n\n    // componentDidMount() {\n    //     const handleData = (data) => {\n    //         const keys = Object.keys(data[0]).map(k => {\n    //             return {\n    //                 fieldname: k,\n    //                 display: true\n    //             }\n    //         });\n    //         this.setState({\n    //             keys: keys,\n    //             data: data\n    //         });\n    //         console.log(Object.keys(data[0]));\n    //     };\n    //\n    //     csv('Popular_Baby_Names.csv')\n    //         .then(handleData);\n    // }\n\n    handleOnFileChange = (e) => {\n        const filename = e.target.files[0].name;\n        this.setState({\n            currentFilename: filename\n        });\n\n        let reader = new FileReader();\n\n        reader.onload = (e) => {\n            const data = csvParse(e.target.result);\n            const keys = Object.keys(data[0]).map(k => {\n                return {\n                    fieldname: k,\n                    display: true\n                }\n            });\n            this.setState({\n                currentIndex: 0,\n                inputIndex: 1,\n                showAll: true,\n                keys: keys,\n                data: data\n            });\n            // console.log(Object.keys(data[0]));\n        };\n\n        reader.readAsText(e.target.files[0]);\n    };\n\n    onChangeShowAll = (event) => {\n        const showAll = event.target.checked;\n        const keys = this.state.keys.map(k => {\n            return {\n                fieldname: k.fieldname,\n                display: showAll\n            }\n        });\n        this.setState({\n            showAll: showAll,\n            keys: keys\n        });\n    };\n\n    onChangeShowField = (event, key) => {\n        const keys = this.state.keys.map(k => {\n            if (k.fieldname === key.fieldname) {\n                return {\n                    fieldname: key.fieldname,\n                    display: event.target.checked\n                }\n            } else {\n                return k;\n            }\n        });\n        let showAll = true;\n        keys.forEach(k => {\n           showAll = showAll && k.display;\n        });\n        this.setState({\n            showAll: showAll,\n            keys: keys\n        })\n    };\n\n    handlePreviousClick = (e) => {\n        if (e.detail === 0) {\n            // https://github.com/facebook/react/issues/3907\n            return;\n        }\n        this.setState(state => {\n            if (state.currentIndex > 0) {\n                return {\n                    currentIndex: state.currentIndex - 1,\n                    inputIndex: state.currentIndex\n                }\n            } else {\n                return  null;\n            }\n        });\n    };\n\n    handleNextClick = (e) => {\n        if (e.detail === 0) {\n            // https://github.com/facebook/react/issues/3907\n            return;\n        }\n        this.setState(state => {\n            if (state.currentIndex < state.data.length) {\n                return {\n                    currentIndex: state.currentIndex + 1,\n                    inputIndex: state.currentIndex + 2\n                }\n            } else {\n                return  null;\n            }\n        });\n    };\n\n    handleTextInputChange = (event) => {\n        const index = event.target.value;\n        this.setState({\n           inputIndex: index\n        });\n    };\n\n    handleOnSubmit = (event) => {\n        if (event.key === \"Enter\") {\n            this.setState(state => {\n                const index = +state.inputIndex;\n                if (Number.isInteger(index) && index > 0 && index <= state.data.length) {\n                    return {\n                        currentIndex: index - 1\n                    }\n                }\n                alert(\"input \" + state.inputIndex + \" is invalid\");\n                return null;\n            });\n        }\n    };\n\n    render() {\n        const displayedKeys = this.state.keys.map(k => {\n           return (\n               <li key={k.fieldname}>\n                   <div className=\"checkbox\">\n                       <label>\n                           <input name={k.fieldname} type=\"checkbox\" checked={k.display} onChange={ e => {this.onChangeShowField(e,k)} }/>\n                               {k.fieldname}\n                       </label>\n                   </div>\n               </li>\n           );\n        });\n\n        const row = this.state.data[this.state.currentIndex];\n\n        const keyValuePairs = this.state.keys\n            .map(k => {\n                if (k.display === false) {\n                    return null;\n                }\n                return (\n                    <React.Fragment key={k.fieldname}>\n                        <dt>{k.fieldname}</dt>\n                        <dd>{row[k.fieldname]}</dd>\n                    </React.Fragment>\n                );\n            })\n            .filter(obj => obj !== null);\n\n        return (\n            <React.Fragment>\n                <Navbar currentFilename={this.state.currentFilename} handleOnFileChange={this.handleOnFileChange} />\n\n                <div className=\"row\">\n                    <Sidebar showAll={this.state.showAll} displayedKeys={displayedKeys} onChangeShowAll={this.onChangeShowAll}/>\n\n                    <MainPanel handlePreviousClick={this.handlePreviousClick}\n                               handleNextClick={this.handleNextClick}\n                               inputIndex={this.state.inputIndex}\n                               handleTextInputChange={this.handleTextInputChange}\n                               handleOnSubmit={this.handleOnSubmit}\n                               currentIndex={this.state.currentIndex+1}\n                               dataLength={this.state.data.length === 0 ? 0 : this.state.data.length+1}\n                               keyValuePairs={keyValuePairs}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nimport Dashboard from \"./Dashboard\";\nimport './dashboard.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"container-fluid\">\n                <Dashboard/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}